#!/bin/bash

# List of Pokémon names
POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Folder to save the JSON files
OUTPUT_FOLDER="pokemon_data"
mkdir -p "$OUTPUT_FOLDER"

# Base URL for the API
BASE_URL="https://pokeapi.co/api/v2/pokemon"

# Loop through each Pokémon name
for POKEMON in "${POKEMON_LIST[@]}"
do
    echo "Fetching data for $POKEMON..."
    
    # Fetch the Pokémon data using curl
    curl -s "$BASE_URL/$POKEMON" -o "$OUTPUT_FOLDER/$POKEMON.json"
    
    # Check if the request was successful
    if [ $? -eq 0 ]; then
        echo "Saved data to $OUTPUT_FOLDER/$POKEMON.json ✅"
    else
        echo "Failed to fetch data for $POKEMON ❌"
    fi
    
    # Sleep for 2 seconds to avoid rate-limiting issues
    sleep 2
done

echo "All data retrieval complete!"

#!/bin/bash

# List of Pokémon names
POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Folder to save the JSON files
OUTPUT_FOLDER="pokemon_data"
mkdir -p "$OUTPUT_FOLDER"

# Base URL for the API
BASE_URL="https://pokeapi.co/api/v2/pokemon/"

# Function to fetch data for a Pokémon with retry logic
fetch_pokemon_data_with_retry() {
    local pokemon_name="$1"
    local retries=3
    local count=0
    local success=false

    # Retry loop
    while [ $count -lt $retries ]; do
        # Attempt to fetch data using curl
        response=$(curl -s -w "%{http_code}" -o "$OUTPUT_FOLDER/$pokemon_name.json" "$BASE_URL$pokemon_name/")
        http_code=$(echo "$response" | tail -n1)  # Get the HTTP status code

        if [ "$http_code" -eq 200 ]; then
            # If the request is successful (HTTP 200), set success to true
            success=true
            break
        else
            # Increment retry count and log the error
            count=$((count + 1))
            echo "Attempt $count failed for $pokemon_name with HTTP code $http_code. Retrying..."
            sleep 2  # Wait before retrying
        fi
    done

    # If all retries fail, log the error
    if [ "$success" = false ]; then
        echo "Failed to fetch data for $pokemon_name after $retries attempts. Skipping..."
    fi
}

# Main script to fetch and save data for each Pokémon
for POKEMON in "${POKEMON_LIST[@]}"; do
    echo "Fetching data for $POKEMON..."

    # Fetch the Pokémon data with retries
    fetch_pokemon_data_with_retry "$POKEMON"

    # If the data was fetched successfully, save it to a file
    if [ -f "$OUTPUT_FOLDER/$POKEMON.json" ]; then
        echo "Saved data to $OUTPUT_FOLDER/$POKEMON.json ✅"
    fi

    # Sleep for 2 seconds to avoid rate-limiting issues
    sleep 2
done
